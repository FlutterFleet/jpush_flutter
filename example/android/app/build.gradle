plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.kjxbyz.plugins.jpush_flutter_example"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.kjxbyz.plugins.jpush_flutter_example"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        manifestPlaceholders = manifestPlaceholders + [
            JPUSH_PKGNAME : applicationId,
            JPUSH_APPKEY : "", // JPush 上注册的包名对应的 App Key.
            JPUSH_CHANNEL : "", // 暂时填写默认值即可.
        ]
    }

    flavorDimensions "default"
    productFlavors {
        // 国内分发
        internal {
            dimension "default"
        }

        // 国外分发
        external {
            dimension "default"
        }
    }

    buildTypes {
//        release {
//            signingConfig signingConfigs.release
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'jiguang-proguard-rules.pro'
//        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
